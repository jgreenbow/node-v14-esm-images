FROM alpine:3.17

ENV NODE_VERSION 14.21.4
ENV SOURCE_URL https://github.com/meteor/node-v14-esm/archive/refs/tags

RUN addgroup -g 1000 node \
    && adduser -u 1000 -G node -s /bin/sh -D node \
    && apk add --no-cache \
        libstdc++ \
    && apk add --no-cache --virtual .build-deps \
        curl \
    && ARCH= && alpineArch="$(apk --print-arch)" \
    && case "${alpineArch##*-}" in \
        x86_64) \
            ARCH='x64' ;; \
        *) ;; \
        esac \
    && echo "Building from source" \
    && apk add --no-cache --virtual .build-deps-full \
        binutils-gold \
        g++ \
        gcc \
        gnupg \
        libgcc \
        linux-headers \
        make \
        python3 \
    && curl -fsSLO --compressed "$SOURCE_URL/v$NODE_VERSION.tar.gz" \
    && tar -xzf "v$NODE_VERSION.tar.gz" \
    && cd "node-v14-esm-$NODE_VERSION" \
    && ./configure \
    && make -j$(getconf _NPROCESSORS_ONLN) V= \
        DESTCPU="$ARCH" \
        ARCH="$ARCH" \
        VARIATION="musl" \
        RELEASE_URLBASE="$SOURCE_URL" \
    && make install \
    && apk del .build-deps-full \
    && cd .. \
    && rm -Rf "node-v14-esm-$NODE_VERSION" \
    && rm "v$NODE_VERSION.tar.gz" \
    && apk del .build-deps \
    # smoke tests
    && node --version \
    && npm --version

# ENV YARN_VERSION 1.22.19

# RUN apk add --no-cache --virtual .build-deps-yarn curl gnupg tar \
#   # use pre-existing gpg directory, see https://github.com/nodejs/docker-node/pull/1895#issuecomment-1550389150
#   && export GNUPGHOME="$(mktemp -d)" \
#   && for key in \
#     6A010C5166006599AA17F08146C2130DFD2497F5 \
#   ; do \
#     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" || \
#     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ; \
#   done \
#   && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
#   && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc" \
#   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
#   && gpgconf --kill all \
#   && rm -rf "$GNUPGHOME" \
#   && mkdir -p /opt \
#   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \
#   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \
#   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \
#   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
#   && apk del .build-deps-yarn \
#   # smoke test
#   && yarn --version

COPY docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]

CMD [ "node" ]